@page "/addprinter"

@using Blazored.FluentValidation
@using PrinterShop.Shared.Enums

@inject IComponentService ComponentService;
@inject IPrinterService PrinterService;
@inject NavigationManager NavigationManager;

<h3>Add Printer</h3>

@if (_components is not null)
{
    <EditForm Model="_printer" OnValidSubmit="CreatePrinterAsync">
        <FluentValidationValidator/>
        <div class="form-group">
            <label for="brand">Brand</label>
            <InputText id="brand" @bind-Value="_printer.Brand" class="form-control"></InputText>
            <ValidationMessage For="() => _printer.Brand"/>
        </div>
        <div class="form-group">
            <label for="model">Model</label>
            <InputText id="model" @bind-Value="_printer.Model" class="form-control"></InputText>
            <ValidationMessage For="() => _printer.Model"/>
        </div>
        <div class="form-group">
            <label for="mainboard">Mainboard</label>
            <InputSelect id="mainboard" @bind-Value="_printer.MainBoard" class="form-control">
                @foreach (var mainboard in (_components.Where(x => x.ComponentType == ComponentType.MainBoard)))
                {
                    <option value="@mainboard.ModelNumber" selected="selected">@mainboard.Brand : @mainboard.Model</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="steppermotor">Stepper Motor</label>
            <InputSelect id="steppermotor" @bind-Value="_printer.StepperMotor" class="form-control">
                @foreach (var steppermotor in (_components.Where(x => x.ComponentType == ComponentType.StepperMotor)).ToList())
                {
                    <option value="@steppermotor.ModelNumber" selected>@steppermotor.Brand : @steppermotor.Model</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="extruder">Extruder</label>
            <InputSelect id="extruder" @bind-Value="_printer.Extruder" class="form-control">
                @foreach (var extruder in (_components.Where(x => x.ComponentType == ComponentType.Extruder)).ToList())
                {
                    <option value="@extruder.ModelNumber" selected>@extruder.Brand : @extruder.Model</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="heatingbed">Heating Bed</label>
            <InputSelect id="heatingbed" @bind-Value="_printer.HeatingBed" class="form-control">
                @foreach (var heatingbad in (_components.Where(x => x.ComponentType == ComponentType.HeatingBed)).ToList())
                {
                    <option value="@heatingbad.ModelNumber" selected>@heatingbad.Brand : @heatingbad.Model</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="sensor">Bed Leveling Sensor</label>
            <InputSelect id="sensor" @bind-Value="_printer.BedLevelingSensor" class="form-control">
                @foreach (var sensor in (_components.Where(x => x.ComponentType == ComponentType.BedLevelingSensor)).ToList())
                {
                    <option value="@sensor.ModelNumber" selected>@sensor.Brand : @sensor.Model</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-secondary my-2">Create Printer</button>
        </div>
    </EditForm>
}

<EditForm Model="_printer" OnValidSubmit="CreatePrinterAsync">
    <FluentValidationValidator  />
    <div class="form-group">
        <label for="brand">Brand</label>
        <InputText id="brand" @bind-Value="_printer.Brand" class="form-control"></InputText>
        <ValidationMessage For="() => _printer.Brand" />
    </div>
    <div class="form-group">
        <label for="model">Model</label>
        <InputText id="model" @bind-Value="_printer.Model" class="form-control"></InputText>
        <ValidationMessage For="() => _printer.Model" />
    </div>
    <div class="form-group">
        <label for="mainboard">Mainboard</label>
        <InputSelect id="mainboard" @bind-Value="_printer.MainBoard" class="form-control">
            @foreach (var mainboard in (_components.Where(x => x.ComponentType == ComponentType.MainBoard)))
            {
                <option value="@mainboard.ModelNumber">@mainboard.Brand : @mainboard.Model</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="steppermotor">Stepper Motor</label>
        <InputSelect id="steppermotor" @bind-Value="_printer.StepperMotor" class="form-control">
            @foreach (var steppermotor in (_components.Where(x => x.ComponentType == ComponentType.StepperMotor)))
            {
                <option value="@steppermotor.ModelNumber">@steppermotor.Brand : @steppermotor.Model</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="extruder">Extruder</label>
        <InputSelect id="extruder" @bind-Value="_printer.Extruder" class="form-control">
            @foreach (var extruder in (_components.Where(x => x.ComponentType == ComponentType.Extruder)))
            {
                <option value="@extruder.ModelNumber">@extruder.Brand : @extruder.Model</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="heatingbed">Heating Bed</label>
        <InputSelect id="heatingbed" @bind-Value="_printer.HeatingBed" class="form-control">
            @foreach (var heatingbad in (_components.Where(x => x.ComponentType == ComponentType.HeatingBed)))
            {
                <option value="@heatingbad.ModelNumber">@heatingbad.Brand : @heatingbad.Model</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="sensor">Bed Leveling Sensor</label>
        <InputSelect id="sensor" @bind-Value="_printer.BedLevelingSensor" class="form-control">
            @foreach (var sensor in (_components.Where(x => x.ComponentType == ComponentType.BedLevelingSensor)))
            {
            <option value="@sensor.ModelNumber">@sensor.Brand : @sensor.Model</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-secondary my-2">Create Printer</button>
    </div>
</EditForm>

@code {

    private List<ComponentDto> _components;
    
    private PrinterDto _printer = new();

    private async Task CreatePrinterAsync()
    {
        await PrinterService.AddAsync(_printer);
        
        NavigationManager.NavigateTo("listprinters");
    }

    protected override async Task OnInitializedAsync()
    {
        _components = (await ComponentService.GetAllAsync()).ToList();
    }

}